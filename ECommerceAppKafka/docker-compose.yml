services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      kafka-topics.sh --create --if-not-exists --topic ordersTopic \
        --bootstrap-server kafka:9092 \
        --replication-factor 1 --partitions 3
      "
    networks:
      - app-network

  consumer:
    image: lahav97/order-service-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "5099:5099"
    networks:
      - app-network
    command: ["dotnet", "OrderService.dll"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5099/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  publisher:
    image: lahav97/cart-service-kafka:latest 
    depends_on:
      - kafka
      - consumer
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "5252:5252"
    networks:
      - app-network
    command: ["dotnet", "CartService.dll"]

networks:
  app-network:
    driver: bridge